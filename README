Last updated : 02 Feb 14

OVERVIEW
--------

The ADAQ (AIMS Data AcQuisition) library is a self-contained software
layer that manages the interface between the CAEN data acquisition
hardware and the AIMS acquisition and analysis codes. It provides the
necessary CAEN libraries (CAENComm, CAENDigitizer, CAENVME) and then
adds an enhanced sublayer of functionality on top to provide more
powerful and straightforward control of the CAEN hardware. ADAQ
provides users with C, C++, and Python interfaces for controlling the
CAEN hardware; the Python methods are created via Boost.Python, which
wraps the C++ methods to provide a seamless Python
interface. The hierarchy can be envisaged as follows:

     --------------------------
     | Acquisition / Analysis |
     --------------------------
                 |
                 V
           ADAQ libraries
       --------------------
       | Enhanced methods |
       |         |        |  
       |         V        |  
       |  CAEN libraries  |
       --------------------
                 |
                 V
         -----------------
         | CAEN HARDWARE |
         -----------------


The ADAQ distribution also contains "utility" classes that may be
generally useful for any of the acquisition and analysis programs that
utilize the ADAQ libraries. One advantage of the ADAQ library layer is
that acquisition and analysis code in any language (provided it can
access C, C++, or Python classes) and with any graphical interface can
be written to utilize the ADAQ library. It is often the case that
different codes will require access to a single class that transcends
a single code. In this case, it is desirable that a single, easily
maintainable, and self-consistent class is available for any code that
requires it. For example, a data storage class used by an acquisition
code may be required for an analysis code to access that data.

At present, a number of C++ classes for data storage and graphical
user interfaces are provided for the ROOT toolkit
(http://root.cern.ch/drupal/)


DIRECTORY STRUCTURE/DESCRIPTION
-------------------------------

--> adaq/ : The ADAQ source code for enhanced CAEN hardware methods

--> caen/ : The CAEN firmware, drivers, and libraries
    --> drivers/ : Linux drivers for the VME-USB connection
    --> firmware/ : firmware for the V1718, V1720 VME boards
    --> libraries/ : contains CAENComm, CAENDigitizer, and CAENVME libraries

--> lib/ : The main library directory for ADAQ and CAEN libraries
    --> i686/ : 32-bit 
    --> x86_64 : 64-bit

--> include/ : The main directory for all ADAQ and CAEN header files

--> root/ : ROOT class definitions for general data storage and
            graphical user interfaces


ADAQ DIRECTORY
--------------

The ADAQ library essentially provides all of the CAEN library methods
to control the acquisition and power supply hardware along with a
number of enhanced methods for more powerful and often more simpler
interfaces that utilize the CAEN library methods. The enhanced methods
can be found in the C++ ADAQDigitizer and ADAQHighVoltage classes.

The ADAQPythonWrapper class uses Boost.Python to wrap the
aforementioned C++ classes such that the user has the additional
option of seamless Python interface without the need to rewrite any
code. This has additional advantage of ensuring consistency between
the C++ and Python interfaces.

All of the above is compiled into two shared object libraries :
"libADAQ.so" provides the C++ interface methods while "libPyDAQ.so"
provides the Python inteface methods. A GNU makefile control the
library building. 


CAEN DIRECTORY
--------------

This directory contains all of the required CAEN drivers, firmware,
and libraries required by the AIMS DAQ hardware. The most-up-date
versions are available as well as many legacy versions for backwards
compatibility. Including the libraries within the ADAQ distribution
provides explicit control over versions and ensures easy portability
between multiple machines without the need to download/install the
CAEN libraries everytime.


-- Brief descriptions of the CAEN libraries --

The following are the most up-to-date CAEN libraries as of 03 Feb
14. Previous versions are contained within the caen/archive/ directory
for backwards compatibility

--CAENComm-1.2.0 : header files (includes) and library functions for
                   general communication with CAEN VME devices
  
--CAENVMELib-2.30.2 : header files (includes) and library functions for
                      general operating system (OS) to VME communication
                      via one of several possible links (USB, optical,etc). 

--CAENDigitizer-2.3.2 : header files (includes) and library functions for
                        general communication with the CAEN digitizer modules
